<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Take-Home Pay Calculator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen py-8">

    <div class="bg-white p-6 sm:p-8 rounded-xl shadow-lg w-full max-w-lg mx-4">
        <div class="text-center mb-6">
            <h1 class="text-2xl sm:text-3xl font-bold text-gray-800">Take-Home Pay Calculator ðŸ’µ</h1>
            <p class="text-gray-500 mt-2">Estimate your monthly net pay for your location.</p>
        </div>

        <div class="space-y-6">
            <div>
                <label for="salary" class="block text-sm font-medium text-gray-700 mb-1">Gross Annual Salary ($)</label>
                <input type="number" id="salary" placeholder="e.g., 150000" value="150000" class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
            </div>
             <div>
                <label for="rent" class="block text-sm font-medium text-gray-700 mb-1">Monthly Rent ($)</label>
                <input type="number" id="rent" placeholder="e.g., 2500" value="2500" class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
            </div>

            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                <div class="form-group">
                    <label for="location" class="block text-sm font-medium text-gray-700 mb-1">Location</label>
                    <select id="location" class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        <option value="NYC">New York City, NY</option>
                        <option value="LA">Los Angeles, CA</option>
                        <option value="Bellevue">Bellevue, WA</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="year" class="block text-sm font-medium text-gray-700 mb-1">Tax Year</label>
                    <select id="year" class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        <option value="2025">2025</option>
                        <option value="2024">2024</option>
                        <option value="2023">2023</option>
                    </select>
                </div>
            </div>
        </div>

        <button onclick="calculatePay()" class="w-full mt-8 bg-blue-600 text-white font-bold py-3 rounded-md hover:bg-blue-700 transition duration-300 shadow-md">Calculate Take-Home Pay</button>

        <div id="results" class="mt-8 pt-6 border-t border-gray-200" style="display: none;">
            <h2 class="text-xl sm:text-2xl font-bold text-gray-800 text-center mb-4">Your Estimated Breakdown</h2>
            <div class="space-y-3 bg-gray-50 p-4 rounded-lg">
                <p class="flex justify-between text-gray-800"><span>Gross Monthly Income:</span> <span id="gross-monthly" class="font-semibold"></span></p>
                <hr>
                <p class="flex justify-between text-red-600"><span>Federal Tax:</span> <span id="federal-tax" class="font-semibold"></span></p>
                <p class="flex justify-between text-red-600"><span>State Tax:</span> <span id="state-tax" class="font-semibold"></span></p>
                <p class="flex justify-between text-red-600"><span>City Tax:</span> <span id="city-tax" class="font-semibold"></span></p>
                <p class="flex justify-between text-red-600"><span>Social Security:</span> <span id="ss-tax" class="font-semibold"></span></p>
                <p class="flex justify-between text-red-600"><span>Medicare:</span> <span id="medicare-tax" class="font-semibold"></span></p>
                <hr>
                <p class="flex justify-between text-gray-800"><span>Total Monthly Deductions:</span> <span id="total-deductions" class="font-semibold"></span></p>
                <div class="pt-4 text-center bg-white p-4 rounded-md shadow-inner mt-4">
                     <p class="text-lg font-bold text-gray-800">Estimated Monthly Take-Home:</p>
                     <p id="net-monthly" class="text-3xl font-extrabold text-blue-600"></p>
                     <p class="text-sm text-gray-600 mt-2">(<span id="tax-percentage" class="font-bold"></span> of gross income goes to taxes)</p>
                </div>
                <div class="pt-4 text-center bg-blue-50 p-4 rounded-md shadow-inner mt-4">
                     <p class="text-lg font-bold text-gray-800">Income After Rent:</p>
                     <p id="after-rent" class="text-3xl font-extrabold text-green-600"></p>
                     <p class="text-sm text-gray-600 mt-2">(<span id="rent-percentage" class="font-bold"></span> of take-home pay goes to rent)</p>
                </div>
            </div>
        </div>
        <p id="error-message" class="text-red-500 font-bold text-center mt-4"></p>
    </div>

    <script>
        // Data store for tax information by location and year
        const taxData = {
            // --- New York City Data ---
            NYC: {
                2025: {
                    federal: { deduction: 14600, brackets: [ { rate: 0.10, from: 0, to: 11600 }, { rate: 0.12, from: 11600, to: 47150 }, { rate: 0.22, from: 47150, to: 100525 }, { rate: 0.24, from: 100525, to: 191950 }, { rate: 0.32, from: 191950, to: 243725 }, { rate: 0.35, from: 243725, to: 609350 }, { rate: 0.37, from: 609350, to: Infinity } ] },
                    state: { deduction: 8000, brackets: [ { rate: 0.0400, from: 0, to: 8500 }, { rate: 0.0450, from: 8500, to: 11700 }, { rate: 0.0525, from: 11700, to: 13900 }, { rate: 0.0550, from: 13900, to: 80650 }, { rate: 0.0600, from: 80650, to: 215400 }, { rate: 0.0685, from: 215400, to: 1077550 }, { rate: 0.0965, from: 1077550, to: 5000000 }, { rate: 0.1030, from: 5000000, to: 25000000 }, { rate: 0.1090, from: 25000000, to: Infinity } ] },
                    city: { brackets: [ { rate: 0.03078, from: 0, to: 12000 }, { rate: 0.03762, from: 12000, to: 25000 }, { rate: 0.03819, from: 25000, to: 50000 }, { rate: 0.03876, from: 50000, to: Infinity } ] },
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 168600, medicareRate: 0.0145 }
                },
                2024: {
                    federal: { deduction: 14600, brackets: [ { rate: 0.10, from: 0, to: 11600 }, { rate: 0.12, from: 11600, to: 47150 }, { rate: 0.22, from: 47150, to: 100525 }, { rate: 0.24, from: 100525, to: 191950 }, { rate: 0.32, from: 191950, to: 243725 }, { rate: 0.35, from: 243725, to: 609350 }, { rate: 0.37, from: 609350, to: Infinity } ] },
                    state: { deduction: 8000, brackets: [ { rate: 0.0400, from: 0, to: 8500 }, { rate: 0.0450, from: 8500, to: 11700 }, { rate: 0.0525, from: 11700, to: 13900 }, { rate: 0.0550, from: 13900, to: 80650 }, { rate: 0.0600, from: 80650, to: 215400 }, { rate: 0.0685, from: 215400, to: 1077550 }, { rate: 0.0965, from: 1077550, to: 5000000 }, { rate: 0.1030, from: 5000000, to: 25000000 }, { rate: 0.1090, from: 25000000, to: Infinity } ] },
                    city: { brackets: [ { rate: 0.03078, from: 0, to: 12000 }, { rate: 0.03762, from: 12000, to: 25000 }, { rate: 0.03819, from: 25000, to: 50000 }, { rate: 0.03876, from: 50000, to: Infinity } ] },
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 168600, medicareRate: 0.0145 }
                },
                2023: {
                    federal: { deduction: 13850, brackets: [ { rate: 0.10, from: 0, to: 11000 }, { rate: 0.12, from: 11000, to: 44725 }, { rate: 0.22, from: 44725, to: 95375 }, { rate: 0.24, from: 95375, to: 182100 }, { rate: 0.32, from: 182100, to: 231250 }, { rate: 0.35, from: 231250, to: 578125 }, { rate: 0.37, from: 578125, to: Infinity } ] },
                    state: { deduction: 8000, brackets: [ { rate: 0.0400, from: 0, to: 8500 }, { rate: 0.0450, from: 8500, to: 11700 }, { rate: 0.0525, from: 11700, to: 13900 }, { rate: 0.0550, from: 13900, to: 80650 }, { rate: 0.0600, from: 80650, to: 215400 }, { rate: 0.0685, from: 215400, to: 1077550 }, { rate: 0.0965, from: 1077550, to: 5000000 }, { rate: 0.1030, from: 5000000, to: 25000000 }, { rate: 0.1090, from: 25000000, to: Infinity } ] },
                    city: { brackets: [ { rate: 0.03078, from: 0, to: 12000 }, { rate: 0.03762, from: 12000, to: 25000 }, { rate: 0.03819, from: 25000, to: 50000 }, { rate: 0.03876, from: 50000, to: Infinity } ] },
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 160200, medicareRate: 0.0145 }
                }
            },
            // --- Los Angeles, CA Data ---
            LA: {
                2025: { // Using 2024 CA data as estimate for 2025
                    federal: { deduction: 14600, brackets: [ { rate: 0.10, from: 0, to: 11600 }, { rate: 0.12, from: 11600, to: 47150 }, { rate: 0.22, from: 47150, to: 100525 }, { rate: 0.24, from: 100525, to: 191950 }, { rate: 0.32, from: 191950, to: 243725 }, { rate: 0.35, from: 243725, to: 609350 }, { rate: 0.37, from: 609350, to: Infinity } ] },
                    state: { deduction: 5863, brackets: [ { rate: 0.011, from: 0, to: 11133 }, { rate: 0.022, from: 11133, to: 26377 }, { rate: 0.044, from: 26377, to: 41629 }, { rate: 0.066, from: 41629, to: 57824 }, { rate: 0.088, from: 57824, to: 73069 }, { rate: 0.1023, from: 73069, to: 372687 }, { rate: 0.1133, from: 372687, to: 447221 }, { rate: 0.1243, from: 447221, to: 745369 }, { rate: 0.1353, from: 745369, to: Infinity } ] },
                    city: { brackets: [] }, // No city tax
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 168600, medicareRate: 0.0145 }
                },
                2024: {
                    federal: { deduction: 14600, brackets: [ { rate: 0.10, from: 0, to: 11600 }, { rate: 0.12, from: 11600, to: 47150 }, { rate: 0.22, from: 47150, to: 100525 }, { rate: 0.24, from: 100525, to: 191950 }, { rate: 0.32, from: 191950, to: 243725 }, { rate: 0.35, from: 243725, to: 609350 }, { rate: 0.37, from: 609350, to: Infinity } ] },
                    state: { deduction: 5863, brackets: [ { rate: 0.011, from: 0, to: 11133 }, { rate: 0.022, from: 11133, to: 26377 }, { rate: 0.044, from: 26377, to: 41629 }, { rate: 0.066, from: 41629, to: 57824 }, { rate: 0.088, from: 57824, to: 73069 }, { rate: 0.1023, from: 73069, to: 372687 }, { rate: 0.1133, from: 372687, to: 447221 }, { rate: 0.1243, from: 447221, to: 745369 }, { rate: 0.1353, from: 745369, to: Infinity } ] },
                    city: { brackets: [] }, // No city tax
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 168600, medicareRate: 0.0145 }
                },
                2023: {
                    federal: { deduction: 13850, brackets: [ { rate: 0.10, from: 0, to: 11000 }, { rate: 0.12, from: 11000, to: 44725 }, { rate: 0.22, from: 44725, to: 95375 }, { rate: 0.24, from: 95375, to: 182100 }, { rate: 0.32, from: 182100, to: 231250 }, { rate: 0.35, from: 231250, to: 578125 }, { rate: 0.37, from: 578125, to: Infinity } ] },
                    state: { deduction: 5363, brackets: [ { rate: 0.01, from: 0, to: 10412 }, { rate: 0.02, from: 10412, to: 24684 }, { rate: 0.04, from: 24684, to: 38959 }, { rate: 0.06, from: 38959, to: 54081 }, { rate: 0.08, from: 54081, to: 68350 }, { rate: 0.093, from: 68350, to: 349137 }, { rate: 0.103, from: 349137, to: 418961 }, { rate: 0.113, from: 418961, to: 698271 }, { rate: 0.123, from: 698271, to: Infinity } ] },
                    city: { brackets: [] }, // No city tax
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 160200, medicareRate: 0.0145 }
                }
            },
            // --- Bellevue, WA Data ---
            Bellevue: {
                 2025: {
                    federal: { deduction: 14600, brackets: [ { rate: 0.10, from: 0, to: 11600 }, { rate: 0.12, from: 11600, to: 47150 }, { rate: 0.22, from: 47150, to: 100525 }, { rate: 0.24, from: 100525, to: 191950 }, { rate: 0.32, from: 191950, to: 243725 }, { rate: 0.35, from: 243725, to: 609350 }, { rate: 0.37, from: 609350, to: Infinity } ] },
                    state: { deduction: 0, brackets: [] }, // No state income tax
                    city: { brackets: [] }, // No city tax
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 168600, medicareRate: 0.0145 }
                },
                2024: {
                    federal: { deduction: 14600, brackets: [ { rate: 0.10, from: 0, to: 11600 }, { rate: 0.12, from: 11600, to: 47150 }, { rate: 0.22, from: 47150, to: 100525 }, { rate: 0.24, from: 100525, to: 191950 }, { rate: 0.32, from: 191950, to: 243725 }, { rate: 0.35, from: 243725, to: 609350 }, { rate: 0.37, from: 609350, to: Infinity } ] },
                    state: { deduction: 0, brackets: [] }, // No state income tax
                    city: { brackets: [] }, // No city tax
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 168600, medicareRate: 0.0145 }
                },
                2023: {
                    federal: { deduction: 13850, brackets: [ { rate: 0.10, from: 0, to: 11000 }, { rate: 0.12, from: 11000, to: 44725 }, { rate: 0.22, from: 44725, to: 95375 }, { rate: 0.24, from: 95375, to: 182100 }, { rate: 0.32, from: 182100, to: 231250 }, { rate: 0.35, from: 231250, to: 578125 }, { rate: 0.37, from: 578125, to: Infinity } ] },
                    state: { deduction: 0, brackets: [] }, // No state income tax
                    city: { brackets: [] }, // No city tax
                    fica: { socialSecurityRate: 0.062, socialSecurityLimit: 160200, medicareRate: 0.0145 }
                }
            }
        };

        /**
         * Calculates tax based on a progressive bracket system.
         * @param {number} taxableIncome - The income amount to be taxed.
         * @param {Array} brackets - The array of tax brackets.
         * @returns {number} The total calculated tax.
         */
        function calculateProgressiveTax(taxableIncome, brackets) {
            let tax = 0;
            if (!brackets || brackets.length === 0) {
                return 0;
            }
            for (const bracket of brackets) {
                if (taxableIncome > bracket.from) {
                    const taxableInBracket = Math.min(taxableIncome, bracket.to) - bracket.from;
                    tax += taxableInBracket * bracket.rate;
                }
            }
            return tax;
        }
        
        /**
         * Formats a number as a currency string.
         * @param {number} amount - The number to format.
         * @returns {string} The formatted currency string (e.g., $1,234.56).
         */
        function formatCurrency(amount) {
            return '$' + amount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }

        /**
         * Main function to calculate and display the take-home pay.
         */
        function calculatePay() {
            const salary = parseFloat(document.getElementById('salary').value);
            const rent = parseFloat(document.getElementById('rent').value) || 0;
            const year = document.getElementById('year').value;
            const location = document.getElementById('location').value;
            const data = taxData[location][year];
            const resultsDiv = document.getElementById('results');
            const errorMsg = document.getElementById('error-message');
            
            errorMsg.textContent = '';
            if (isNaN(salary) || salary <= 0) {
                errorMsg.textContent = 'Please enter a valid salary.';
                resultsDiv.style.display = 'none';
                return;
            }

            // FICA Taxes (Social Security & Medicare)
            const socialSecurityTaxable = Math.min(salary, data.fica.socialSecurityLimit);
            const annualSS = socialSecurityTaxable * data.fica.socialSecurityRate;
            const annualMedicare = salary * data.fica.medicareRate;
            
            // Federal Income Tax
            const federalTaxable = Math.max(0, salary - data.federal.deduction);
            const annualFederal = calculateProgressiveTax(federalTaxable, data.federal.brackets);
            
            // State Income Tax
            const stateTaxable = Math.max(0, salary - data.state.deduction);
            const annualState = calculateProgressiveTax(stateTaxable, data.state.brackets);

            // City Income Tax (NYC is based on state taxable income)
            const cityTaxable = stateTaxable;
            const annualCity = calculateProgressiveTax(cityTaxable, data.city.brackets);

            const totalAnnualDeductions = annualFederal + annualState + annualCity + annualSS + annualMedicare;
            const annualNet = salary - totalAnnualDeductions;
            const monthlyNet = annualNet / 12;
            const effectiveTaxRate = (totalAnnualDeductions / salary) * 100;
            
            const afterRent = monthlyNet - rent;
            const rentPercentage = (rent / monthlyNet) * 100;

            // Display Results
            document.getElementById('gross-monthly').textContent = formatCurrency(salary / 12);
            document.getElementById('federal-tax').textContent = formatCurrency(annualFederal / 12);
            document.getElementById('state-tax').textContent = formatCurrency(annualState / 12);
            document.getElementById('city-tax').textContent = formatCurrency(annualCity / 12);
            document.getElementById('ss-tax').textContent = formatCurrency(annualSS / 12);
            document.getElementById('medicare-tax').textContent = formatCurrency(annualMedicare / 12);
            document.getElementById('total-deductions').textContent = formatCurrency(totalAnnualDeductions / 12);
            document.getElementById('net-monthly').textContent = formatCurrency(monthlyNet);
            document.getElementById('tax-percentage').textContent = effectiveTaxRate.toFixed(2) + '%';
            document.getElementById('after-rent').textContent = formatCurrency(afterRent);
            document.getElementById('rent-percentage').textContent = rent > 0 ? rentPercentage.toFixed(2) + '%' : '0%';
            
            resultsDiv.style.display = 'block';
        }

    </script>
</body>
</html>
